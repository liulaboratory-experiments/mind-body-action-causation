knit_by_pkgdown <- !is.null(knitr::opts_chunk$get("fig.retina"))
knitr::opts_chunk$set(
warning = TRUE, # show warnings during codebook generation
message = TRUE, # show messages during codebook generation
error = TRUE, # do not interrupt codebook generation in case of errors,
# TRUE is usually better for debugging
echo = TRUE  # show R code
)
library(pacman)
pacman::p_load(tidyverse, here, codebook)
ggplot2::theme_set(ggplot2::theme_bw())
sessionInfo()
base_path <- here("code", "study1")
data_path <- paste0(base_path, "/data/study1_data_raw.csv")
d <- read_csv(data_path)
head(d)
attributes(d$subject_id) <- "subject ids for all 50 subjects"
attributes(d$subject_id)$label <- "subject ids for all 50 subjects"
library(labelled)
var_label(d$subject_id) <- "subject ids for all 50 subjects"
d
codebook_data <- codebook::bfi
codebook_data
codebook_data$C5
base_path <- here("code", "study1")
data_path <- paste0(base_path, "/data/study1_data_raw.csv")
d <- read_csv(data_path)
d <- d %>%
select(-c(success, timeout, failed_images, failed_audio))
d
d <- d %>%
select(-c(success, timeout, failed_images, failed_video, failed_audio))
d <- read_csv(data_path)
d <- d %>%
select(-c(success, timeout, failed_images, failed_video, failed_audio))
d
d <- read_csv(data_path) %>%
select(-c(success, timeout, failed_images, failed_video, failed_audio))
d
var_label(d) <- list(
subject_id =  "subject ids for all 50 subjects",
trial_type = "type of jspsych trial"
)
d <- read_csv(data_path) %>%
select(-c(success, timeout, failed_images, failed_video, failed_audio)) %>%
mutate(subject_id = as.factor(subject_id))
var_label(d) <- list(
subject_id =  "subject ids for all 50 subjects",
trial_type = "type of jspsych trial"
)
d
colnames(d)
var_label(d) <- list(
subject_id =  "Subject ids for all 50 subjects",
trial_type = "Type of jspsych trial. Trials in jspsych represent checkpoints in the experiment, such as the instructions page, the survey page etc ",
trial_index = "Each subject did about 23 trials (Note: trial in the jspsych sense, since this raw data.",
plugin_version = "Plugin version that the subject had for the jspsych trials",
time_elapsed = "Time in milliseconds the subject spent on a given trial",
trial_id = "Researcher-assigned trial names. Trials highlighted were the consent, example_videos and demorgraphics_survey",
rt = "Time it takes in milliseconds from when the page loads to when subject clicks on continue button",
stimulus = "Html-formatted string describing the stimulus presented to participant on trials that had a stimulus",
response = "For the Causal Task, a dictionary containing subject responses for all 14 questions in each page",
view_history ="A dictionary containing the index of the page and viewing time in milliseconds",
init_locations = "For the Sorting Task, a dictionary describing initial x and y locations of each item and the item name",
moves = "For the Sorting Task, a dictionary describing where x and y locations of where items were moved to",
final_locations = " ",
0 = "For the Sorting Task, a dictionary describing metadata about the first pair of items subjects saw",
base_path <- here("code", "study1")
data_path <- paste0(base_path, "/data/study1_data_raw.csv")
d <- read_csv(data_path) %>%
select(-c(success, timeout, failed_images, failed_video, failed_audio)) %>%
mutate(subject_id = as.factor(subject_id))
var_label(d) <- list(
subject_id =  "Subject ids for all 50 subjects",
trial_type = "Type of jspsych trial. Trials in jspsych represent checkpoints in the experiment, such as the instructions page, the survey page etc ",
trial_index = "Each subject did about 23 trials (Note: trial in the jspsych sense, since this raw data.",
plugin_version = "Plugin version that the subject had for the jspsych trials",
time_elapsed = "Time in milliseconds the subject spent on a given trial",
trial_id = "Researcher-assigned trial names. Trials highlighted were the consent, example_videos and demorgraphics_survey",
rt = "Time it takes in milliseconds from when the page loads to when subject clicks on continue button",
stimulus = "Html-formatted string describing the stimulus presented to participant on trials that had a stimulus",
response = "For the Causal Task, a dictionary containing subject responses for all 14 questions in each page",
view_history ="A dictionary containing the index of the page and viewing time in milliseconds",
init_locations = "For the Sorting Task, a dictionary describing initial x and y locations of each item and the item name",
moves = "For the Sorting Task, a dictionary describing where x and y locations of where items were moved to",
final_locations = " ",
0 = "For the Sorting Task, a dictionary describing metadata about the first pair of items subjects saw",
var_label(d) <- list(
subject_id =  "Subject ids for all 50 subjects",
trial_type = "Type of jspsych trial. Trials in jspsych represent checkpoints in the experiment, such as the instructions page, the survey page etc ",
trial_index = "Each subject did about 23 trials (Note: trial in the jspsych sense, since this raw data.",
plugin_version = "Plugin version that the subject had for the jspsych trials",
time_elapsed = "Time in milliseconds the subject spent on a given trial",
trial_id = "Researcher-assigned trial names. Trials highlighted were the consent, example_videos and demorgraphics_survey",
rt = "Time it takes in milliseconds from when the page loads to when subject clicks on continue button",
stimulus = "Html-formatted string describing the stimulus presented to participant on trials that had a stimulus",
response = "For the Causal Task, a dictionary containing subject responses for all 14 questions in each page",
view_history ="A dictionary containing the index of the page and viewing time in milliseconds",
init_locations = "For the Sorting Task, a dictionary describing initial x and y locations of each item and the item name",
moves = "For the Sorting Task, a dictionary describing where x and y locations of where items were moved to",
final_locations = "For the Sorting Task, a dictionary describing final x and y locations of each item and the item name",
"0" = "For the Sorting Task, a dictionary describing metadata about the first pair of items subjects saw",
1 = "For the Sorting Task, a dictionary describing metadata about the second pair of items subjects saw",
var_label(d) <- list(
subject_id =  "Subject ids for all 50 subjects",
trial_type = "Type of jspsych trial. Trials in jspsych represent checkpoints in the experiment, such as the instructions page, the survey page etc ",
trial_index = "Each subject did about 23 trials (Note: trial in the jspsych sense, since this raw data.",
plugin_version = "Plugin version that the subject had for the jspsych trials",
time_elapsed = "Time in milliseconds the subject spent on a given trial",
trial_id = "Researcher-assigned trial names. Trials highlighted were the consent, example_videos and demorgraphics_survey",
rt = "Time it takes in milliseconds from when the page loads to when subject clicks on continue button",
stimulus = "Html-formatted string describing the stimulus presented to participant on trials that had a stimulus",
response = "For the Causal Task, a dictionary containing subject responses for all 14 questions in each page",
view_history ="A dictionary containing the index of the page and viewing time in milliseconds",
init_locations = "For the Sorting Task, a dictionary describing initial x and y locations of each item and the item name",
moves = "For the Sorting Task, a dictionary describing where x and y locations of where items were moved to",
final_locations = "For the Sorting Task, a dictionary describing final x and y locations of each item and the item name",
"0" = "For the Sorting Task, a dictionary describing metadata about the first pair of items subjects saw")
var_label(d) <- list(
subject_id =  "Subject ids for all 50 subjects",
trial_type = "Type of jspsych trial. Trials in jspsych represent checkpoints in the experiment, such as the instructions page, the survey page etc ",
trial_index = "Each subject did about 23 trials (Note: trial in the jspsych sense, since this raw data.",
plugin_version = "Plugin version that the subject had for the jspsych trials",
time_elapsed = "Time in milliseconds the subject spent on a given trial",
trial_id = "Researcher-assigned trial names. Trials highlighted were the consent, example_videos and demorgraphics_survey",
rt = "Time it takes in milliseconds from when the page loads to when subject clicks on continue button",
stimulus = "Html-formatted string describing the stimulus presented to participant on trials that had a stimulus",
response = "For the Causal Task, a dictionary containing subject responses for all 14 questions in each page",
view_history ="A dictionary containing the index of the page and viewing time in milliseconds",
init_locations = "For the Sorting Task, a dictionary describing initial x and y locations of each item and the item name",
moves = "For the Sorting Task, a dictionary describing where x and y locations of where items were moved to",
final_locations = "For the Sorting Task, a dictionary describing final x and y locations of each item and the item name",
"0" = "For the Sorting Task, a dictionary describing metadata about the first pair of items subjects saw",
"1" = "For the Sorting Task, a dictionary describing metadata about the second pair of items subjects saw",
"2" = "For the Sorting Task, a dictionary describing metadata about the third pair of items subjects saw",
"3" = "For the Sorting Task, a dictionary describing metadata about the fourth pair of items subjects saw",
"4" = "For the Sorting Task, a dictionary describing metadata about the fifth pair of items subjects saw",
"5" = "For the Sorting Task, a dictionary describing metadata about the sixth pair of items subjects saw",
"6" = "For the Sorting Task, a dictionary describing metadata about the seventh pair of items subjects saw",
"7" = "For the Sorting Task, a dictionary describing metadata about the eighth pair of items subjects saw",
"9" = "For the Sorting Task, a dictionary describing metadata about the ninth pair of items subjects saw",
"10" = "For the Sorting Task, a dictionary describing metadata about the tenth pair of items subjects saw",
"11" = "For the Sorting Task, a dictionary describing metadata about the eleventh pair of items subjects saw",
"12" = "For the Sorting Task, a dictionary describing metadata about the twelfth pair of items subjects saw",
"13" = "For the Sorting Task, a dictionary describing metadata about the thirtheenth pair of items subjects saw",
"14" = "For the Sorting Task, a dictionary describing metadata about the fourtheenth pair of items subjects saw",
question_order = "The order of questions seen by subjects",
"15" = "For the Sorting Task, a dictionary describing metadata about the fourtheenth pair of items subjects saw",
feedback = "feedback provided by subjects",
)
var_label(d) <- list(
subject_id =  "Subject ids for all 50 subjects",
trial_type = "Type of jspsych trial. Trials in jspsych represent checkpoints in the experiment, such as the instructions page, the survey page etc ",
trial_index = "Each subject did about 23 trials (Note: trial in the jspsych sense, since this raw data.",
plugin_version = "Plugin version that the subject had for the jspsych trials",
time_elapsed = "Time in milliseconds the subject spent on a given trial",
trial_id = "Researcher-assigned trial names. Trials highlighted were the consent, example_videos and demorgraphics_survey",
rt = "Time it takes in milliseconds from when the page loads to when subject clicks on continue button",
stimulus = "Html-formatted string describing the stimulus presented to participant on trials that had a stimulus",
response = "For the Causal Task, a dictionary containing subject responses for all 14 questions in each page",
view_history ="A dictionary containing the index of the page and viewing time in milliseconds",
init_locations = "For the Sorting Task, a dictionary describing initial x and y locations of each item and the item name",
moves = "For the Sorting Task, a dictionary describing where x and y locations of where items were moved to",
final_locations = "For the Sorting Task, a dictionary describing final x and y locations of each item and the item name",
"0" = "For the Sorting Task, a dictionary describing metadata about the first pair of items subjects saw",
"1" = "For the Sorting Task, a dictionary describing metadata about the second pair of items subjects saw")
subject_id =  "Subject ids for all 50 subjects",
var_label(d) <- list(
subject_id =  "Subject ids for all 50 subjects",
trial_type = "Type of jspsych trial. Trials in jspsych represent checkpoints in the experiment, such as the instructions page, the survey page etc ",
trial_index = "Each subject did about 23 trials (Note: trial in the jspsych sense, since this raw data.",
plugin_version = "Plugin version that the subject had for the jspsych trials",
time_elapsed = "Time in milliseconds the subject spent on a given trial",
trial_id = "Researcher-assigned trial names. Trials highlighted were the consent, example_videos and demorgraphics_survey",
rt = "Time it takes in milliseconds from when the page loads to when subject clicks on continue button",
stimulus = "Html-formatted string describing the stimulus presented to participant on trials that had a stimulus",
response = "For the Causal Task, a dictionary containing subject responses for all 14 questions in each page",
view_history ="A dictionary containing the index of the page and viewing time in milliseconds",
init_locations = "For the Sorting Task, a dictionary describing initial x and y locations of each item and the item name",
moves = "For the Sorting Task, a dictionary describing where x and y locations of where items were moved to",
final_locations = "For the Sorting Task, a dictionary describing final x and y locations of each item and the item name",
"0" = "For the Sorting Task, a dictionary describing metadata about the first pair of items subjects saw",
"1" = "For the Sorting Task, a dictionary describing metadata about the second pair of items subjects saw",
"2" = "For the Sorting Task, a dictionary describing metadata about the third pair of items subjects saw",
"3" = "For the Sorting Task, a dictionary describing metadata about the fourth pair of items subjects saw",
"4" = "For the Sorting Task, a dictionary describing metadata about the fifth pair of items subjects saw",
"5" = "For the Sorting Task, a dictionary describing metadata about the sixth pair of items subjects saw",
"6" = "For the Sorting Task, a dictionary describing metadata about the seventh pair of items subjects saw",
"7" = "For the Sorting Task, a dictionary describing metadata about the eighth pair of items subjects saw",
"9" = "For the Sorting Task, a dictionary describing metadata about the ninth pair of items subjects saw",
"10" = "For the Sorting Task, a dictionary describing metadata about the tenth pair of items subjects saw",
"11" = "For the Sorting Task, a dictionary describing metadata about the eleventh pair of items subjects saw",
"12" = "For the Sorting Task, a dictionary describing metadata about the twelfth pair of items subjects saw",
"13" = "For the Sorting Task, a dictionary describing metadata about the thirtheenth pair of items subjects saw",
"14" = "For the Sorting Task, a dictionary describing metadata about the fourtheenth pair of items subjects saw")
colnames(d)
var_label(d) <- list(
subject_id =  "Subject ids for all 50 subjects",
trial_type = "Type of jspsych trial. Trials in jspsych represent checkpoints in the experiment, such as the instructions page, the survey page etc ",
trial_index = "Each subject did about 23 trials (Note: trial in the jspsych sense, since this raw data.",
plugin_version = "Plugin version that the subject had for the jspsych trials",
time_elapsed = "Time in milliseconds the subject spent on a given trial",
trial_id = "Researcher-assigned trial names. Trials highlighted were the consent, example_videos and demorgraphics_survey",
rt = "Time it takes in milliseconds from when the page loads to when subject clicks on continue button",
stimulus = "Html-formatted string describing the stimulus presented to participant on trials that had a stimulus",
response = "For the Causal Task, a dictionary containing subject responses for all 14 questions in each page",
view_history ="A dictionary containing the index of the page and viewing time in milliseconds",
init_locations = "For the Sorting Task, a dictionary describing initial x and y locations of each item and the item name",
moves = "For the Sorting Task, a dictionary describing where x and y locations of where items were moved to",
final_locations = "For the Sorting Task, a dictionary describing final x and y locations of each item and the item name",
"0" = "For the Sorting Task, a dictionary describing metadata about the first pair of items subjects saw",
"1" = "For the Sorting Task, a dictionary describing metadata about the second pair of items subjects saw",
"2" = "For the Sorting Task, a dictionary describing metadata about the third pair of items subjects saw",
"3" = "For the Sorting Task, a dictionary describing metadata about the fourth pair of items subjects saw",
"4" = "For the Sorting Task, a dictionary describing metadata about the fifth pair of items subjects saw",
"5" = "For the Sorting Task, a dictionary describing metadata about the sixth pair of items subjects saw",
"6" = "For the Sorting Task, a dictionary describing metadata about the seventh pair of items subjects saw",
"7" = "For the Sorting Task, a dictionary describing metadata about the eighth pair of items subjects saw",
"9" = "For the Sorting Task, a dictionary describing metadata about the ninth pair of items subjects saw",
"10" = "For the Sorting Task, a dictionary describing metadata about the tenth pair of items subjects saw",
"11" = "For the Sorting Task, a dictionary describing metadata about the eleventh pair of items subjects saw",
"12" = "For the Sorting Task, a dictionary describing metadata about the twelfth pair of items subjects saw",
"13" = "For the Sorting Task, a dictionary describing metadata about the thirtheenth pair of items subjects saw",
"14" = "For the Sorting Task, a dictionary describing metadata about the fourtheenth pair of items subjects saw",
question_order = "The order of questions seen by subjects",
"15" = "For the Sorting Task, a dictionary describing metadata about the fourtheenth pair of items subjects saw",
feedback = "feedback provided by subjects"
)
d
knit_by_pkgdown <- !is.null(knitr::opts_chunk$get("fig.retina"))
knitr::opts_chunk$set(
warning = TRUE, # show warnings during codebook generation
message = TRUE, # show messages during codebook generation
error = TRUE, # do not interrupt codebook generation in case of errors,
# TRUE is usually better for debugging
echo = TRUE  # show R code
)
library(pacman)
pacman::p_load(tidyverse, here, codebook)
ggplot2::theme_set(ggplot2::theme_bw())
sessionInfo()
base_path <- here("code", "study1")
data_path <- paste0(base_path, "/snapshots_study1_preprocessing_analysis/data_processed_step1.csv")
d <- read_csv(data_path)
d
read_csv(data_path) %>% \
mutate(subject_id = as.factor(subject_id))
d <- read_csv(data_path) %>%
mutate(
subject_id = as.factor(subject_id),
trial_type = as.factor(trial_type),
trial_type_order = as.factor(trial_type_order),
itemA = as.factor(itemA),
itemB = as.factor(itemB),
categoryA = as.factor(categoryA),
categoryB = as.factor(categoryB)
)
d
var_label(d) <- list(
subject_id =  "Subject ids for all 50 subjects",
trial_type = "Factor showing the two experimental conditions: Causal Task vs Sorting Task",
trial_type_order = "Factor showing the two experimental orders, Causal Task first or Sorting Task first",
trial_index = "Index indicating the page of the trial. Subjects had abotu 15 pages of trials",
question_index = "Index of the question within the page. There were roughly 15 questions per page, sometimes more if there was an attention check",
original_trial_index = "Pre-transformed trial index before running pre-processing script",
original_question_index = "Pre-transformed question index before running pre-processing script",
itemA = "First item in the pairing in the Causal Task. This is the cause",
itemB = "second item in the pairing in the Causal Task. This is the effect",
categoryA = "A priori category (or domain) of itemA, or the first item",
categoryB = "A priori category (or domain) of itemB, or the second item",
attention_check_id = "value showing id of the attention check question, it was one of four ids",
correct = "Indicates if attention check question was correct based on predefined answer",
x = "x coordinate of item in Sorting Task",
y = "y coordinate of item in Sorting Task",
item = "item ID in Sorting Task"
)
knit_by_pkgdown <- !is.null(knitr::opts_chunk$get("fig.retina"))
knitr::opts_chunk$set(
warning = TRUE, # show warnings during codebook generation
message = TRUE, # show messages during codebook generation
error = TRUE, # do not interrupt codebook generation in case of errors,
# TRUE is usually better for debugging
echo = TRUE  # show R code
)
library(pacman)
pacman::p_load(tidyverse, here, codebook)
ggplot2::theme_set(ggplot2::theme_bw())
sessionInfo()
base_path <- here("code", "snapshots_study1_preprocessing_analysis")
data_path <- paste0(base_path, "/data/data_model_predictions.csv")
d <- read_csv(data_path)
base_path <- here("code", "snapshots_study1_preprocessing_analysis")
data_path <- paste0(base_path, "/data_model_predictions.csv")
d <- read_csv(data_path)
d
base_path <- here("code", "study1", "snapshots_study1_preprocessing_analysis")
data_path <- paste0(base_path, "/data_model_predictions.csv")
d <- read_csv(data_path)
d
d
var_label(d) <- list(
itemA = "First item in the pairing in the Causal Task. This is the cause",
itemB = "second item in the pairing in the Causal Task. This is the effect",
`theor1_Mind-Body-Action` = "Similarity value assigned to each item pairing for the Mind, Body, Action model. For example, a similarity of 0 for `hear something` and `see something` indicated the model predicts these two items are very similar, since they are both predicted to be in the Mind category",
`theor2_PerCog-OdActSpAct-BodyStimBodynoStim` = "Similarity value assigned to each item pairing for the Fine grained Mind, Body Action model. For example, a similarity of 0 for `hear something` and `see something` indicated the model predicts these two items are very similar, since they are both predicted to be in the Perceptual Items category",
`theor3_Physical-Ethereal` = "Similarity value assigned to each item pairing for the Physical and Psychological/Ethereal model. For example, a similarity of 0 for `hear something` and `see something` indicated the model predicts these two items are very similar, since they are both predicted to be in the Ethereal or psychological items category",
`theor4_cosine_similarity` = "Similarity value assigned to each item pairing for USE word embeddings model",
)
d <- read_csv(data_path)
var_label(d) <- list(
itemA = "First item in the pairing in the Causal Task. This is the cause",
itemB = "second item in the pairing in the Causal Task. This is the effect",
`theor1_Mind-Body-Action` = "Similarity value assigned to each item pairing for the Mind, Body, Action model. For example, a similarity of 0 for `hear something` and `see something` indicated the model predicts these two items are very similar, since they are both predicted to be in the Mind category",
`theor2_PerCog-OdActSpAct-BodyStimBodynoStim` = "Similarity value assigned to each item pairing for the Fine grained Mind, Body Action model. For example, a similarity of 0 for `hear something` and `see something` indicated the model predicts these two items are very similar, since they are both predicted to be in the Perceptual Items category",
`theor3_Physical-Ethereal` = "Similarity value assigned to each item pairing for the Physical and Psychological/Ethereal model. For example, a similarity of 0 for `hear something` and `see something` indicated the model predicts these two items are very similar, since they are both predicted to be in the Ethereal or psychological items category",
`theor4_cosine_similarity` = "Similarity value assigned to each item pairing for USE word embeddings model",
)
var_label(d) <- list(
itemA = "First item in the pairing in the Causal Task. This is the cause",
itemB = "second item in the pairing in the Causal Task. This is the effect",
`theor1_Mind-Body-Action` = "Similarity value assigned to each item pairing for the Mind, Body, Action model. For example, a similarity of 0 for `hear something` and `see something` indicated the model predicts these two items are very similar, since they are both predicted to be in the Mind category",
`theor2_PerCog-OdActSpAct-BodyStimBodynoStim` = "Similarity value assigned to each item pairing for the Fine grained Mind, Body Action model. For example, a similarity of 0 for `hear something` and `see something` indicated the model predicts these two items are very similar, since they are both predicted to be in the Perceptual Items category",
`theor3_Physical-Ethereal` = "Similarity value assigned to each item pairing for the Physical and Psychological/Ethereal model. For example, a similarity of 0 for `hear something` and `see something` indicated the model predicts these two items are very similar, since they are both predicted to be in the Ethereal or psychological items category",
`theor4_cosine_similarity` = "Similarity value assigned to each item pairing for USE word embeddings model"
)
d %>%
count(question_index)
d %>%
count(question_index)
library(tidyverse)
d %>%
count(question_index)
_
knit_by_pkgdown <- !is.null(knitr::opts_chunk$get("fig.retina"))
knitr::opts_chunk$set(
warning = TRUE, # show warnings during codebook generation
message = TRUE, # show messages during codebook generation
error = TRUE, # do not interrupt codebook generation in case of errors,
# TRUE is usually better for debugging
echo = TRUE  # show R code
)
library(pacman)
pacman::p_load(tidyverse, here, codebook)
ggplot2::theme_set(ggplot2::theme_bw())
sessionInfo()
base_path <- here("code", "study1")
data_path <- paste0(base_path, "/snapshots_study1_preprocessing_analysis/data_processed_step1.csv")
d <- read_csv(data_path) %>%
mutate(
subject_id = as.factor(subject_id),
trial_type = as.factor(trial_type),
trial_type_order = as.factor(trial_type_order),
itemA = as.factor(itemA),
itemB = as.factor(itemB),
categoryA = as.factor(categoryA),
categoryB = as.factor(categoryB)
)
d %>%
count(question_index)
d
d %>%
count(subject_id, question_index)
d %>%
group_by(subject_id) %>%
slice_max(question_inde)
d %>%
group_by(subject_id) %>%
slice_max(question_index)
knit_by_pkgdown <- !is.null(knitr::opts_chunk$get("fig.retina"))
knitr::opts_chunk$set(
warning = TRUE, # show warnings during codebook generation
message = TRUE, # show messages during codebook generation
error = TRUE, # do not interrupt codebook generation in case of errors,
# TRUE is usually better for debugging
echo = TRUE  # show R code
)
library(pacman)
pacman::p_load(tidyverse, here, codebook)
ggplot2::theme_set(ggplot2::theme_bw())
sessionInfo()
base_path <- here("code", "study2")
d <- read_csv(data_path)
base_path <- here("code", "study2")
data_path <- paste0(base_path, "/data/study2_data_raw.csv")
d <- read_csv(data_path)
d
base_path <- here("code", "study2")
data_path <- paste0(base_path, "/data/study2_data_raw.csv")
d <- read_csv(data_path) %>%
select(-c(success, timeout, failed_images, failed_video, failed_audio)) %>%
mutate(subject_id = as.factor(subject_id))
d
var_label(d) <- list(
subject_id =  "Subject ids for all 100 subjects",
trial_type = "Type of jspsych trial. Trials in jspsych represent checkpoints in the experiment, such as the instructions page, the survey page etc ",
trial_index = "Each subject had about 20 jspsych trials. This does not refer to experimental trials, but overall trials including instructions",
plugin_version = "Plugin version that the subject had for the jspsych trials",
time_elapsed = "Time in milliseconds the subject spent on a given trial",
trial_id = "Researcher-assigned trial names. Trials highlighted were the consent and demorgraphics_survey",
rt = "Time it takes in milliseconds from when the page loads to when subject clicks on continue button",
stimulus = "Html-formatted string describing the stimulus presented to participant on trials that had a stimulus",
response = "responses on the respective trials, which included 0 or 1 for the main trial questions, and dictionaries of demographic values for the demographic survey items",
view_history ="A dictionary containing the index of the page and viewing time in milliseconds",
condition = "a character type describing the condition assignment. it includes the two experimental conditions, Similarity (which means Inference Condition) and Intervention, as well as the attention check trial labels",
itemB = "The target item in both the Intervention and Inference Tasks (and also the attention check question)",
causal_itemA = "The causal item choice in the Intervention and Inference Tasks, and in the attention check question",
similarity_itemA = "The similar item choice in the Intervention and Inference Tasks, and in the attention check question",
selected_choice = "A html formatted string showing the choice subjects selected in the experimental trial and attention check",
correct_response_attn = "The correct response for the attention check question",
feedback = "Feedback provided by subjects"
)
metadata(d)$name <- "Raw data for Study 2"
metadata(d)$description <- "This is the raw dataset for study 1 that will be used as input for the study 2 script. Since this data is not yet processed, and many of the variables are directly created by jspsych, the variables may not be immediately interpretable or relevant."
